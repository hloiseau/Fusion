﻿@using ITI.PrimarySchool.WebApp.Services;
@{
    Token token = ( Token )ViewData[ "Token" ];
    string email = ( string )ViewData[ "Email" ];
    IEnumerable<string> providers = ( IEnumerable<string> )ViewData[ "Providers" ];
    string providerNames = providers == null ? string.Empty : string.Join( ",", providers.Select( p => string.Format( "'{0}'", p ) ) );
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SPA</title>

    @Html.Partial("_AppStyles")
</head>
<body>
    <div id="app"></div>

    <script>
        (function () {
            var primarySchool = (function () {
                var identity = null;

                var getIdentity = function () {
                    return identity;
                };

                var setIdentity = function (i) {
                    identity = i;
                };

                return {
                    getIdentity: getIdentity,
                    setIdentity: setIdentity
                };
            })();

            this.ITI = this.ITI || {};
            this.ITI.PrimarySchool = primarySchool;
        })();
    </script>

    @if( token != null && email != null )
    {
        <script>
            (function () {
                ITI.PrimarySchool.setIdentity({
                    bearer: {
                        access_token: '@token.AccessToken',
                        expires_in: @token.ExpiresIn
                    },
                    email: '@email',
                    boundProviders: [@Html.Raw( providerNames )]
                });
            })();
        </script>
    }

    <environment names="Development">
        <script type="text/javascript" src="http://localhost:8080/dist/primary-school.js"></script>
    </environment>

    <environment names="Staging,Production">
        <script type="text/javascript" src="~/dist/primary-school.js"></script>
    </environment>
</body>
</html>